C51 COMPILER V9.55   INIT_DEVICE                                                           07/26/2016 12:44:43 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE INIT_DEVICE
OBJECT MODULE PLACED IN Init_device.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Init_device.c LARGE OPTIMIZE(8,SIZE) BROWSE FLOATFUZZY(7) DEBUG OBJECTEX
                    -TEND TABS(2)

line level    source

   1          //---------------------------------------------------------------
   2          // CYGNAL Integrated Products 
   3          //
   4          // C Code Configuration Tool: F020 INITIALIZATION/CONFIGURATION CODE
   5          //----------------------------------------------------------------
   6          // This file is read only. To insert the code into your  
   7          // application, simply cut and paste or use the "Save As" 
   8          // command in the file menu to save the file in your project 
   9          // directory. 
  10          //----------------------------------------------------------------
  11          
  12          //----------------------------------------------------------------
  13          // INCLUDES
  14          //----------------------------------------------------------------
  15          
  16          #include <C8051F020.h>  // Register definition file.
  17          
  18          //------------------------------------------------------------------------------------
  19          // Global CONSTANTS
  20          //------------------------------------------------------------------------------------
  21          //------------------------------------------------------------------------------------
  22          // Function PROTOTYPES
  23          //------------------------------------------------------------------------------------
  24          
  25          //------------------------------------------------------------------------------------
  26          // Config Routine
  27          //------------------------------------------------------------------------------------
  28          void config(void) 
  29          {
  30   1        int n;
  31   1        WDTCN = 0x07; // Watchdog Timer Control Register
  32   1          //EA = 0;
  33   1          WDTCN = 0xDE;   // Disable WDT
  34   1          WDTCN = 0xAD;
  35   1        //EA = 1;
  36   1      
  37   1        XBR0 = 0x06;    
  38   1        XBR1 = 0x00;
  39   1        XBR2 = 0x44;
  40   1      
  41   1      
  42   1        P0MDOUT = 0x75;  // P0.4, P0.2 & P0.0 configured as push-pull output 
  43   1        P1MDOUT = 0xFF;
  44   1        P2MDOUT = 0x00;
  45   1        P3MDOUT = 0x00;
  46   1        P74OUT  = 0x33;
  47   1        
  48   1      //  EMI0CN    = 0x02;
  49   1      //  EMI0TC=0x9a;
  50   1        OSCXCN = 0x67;
  51   1          for (n=0;n < 255; n++); 
  52   1          while ((OSCXCN & 0x80) == 0); 
  53   1        OSCICN = 0x88;  
  54   1      
C51 COMPILER V9.55   INIT_DEVICE                                                           07/26/2016 12:44:43 PAGE 2   

  55   1        REF0CN = 0x00;  // Reference Control Register
  56   1      
  57   1        /*SPI0CN = 0x02;  // SPI Control Register
  58   1        SPI0CFG = 0xc7; // SPI Configuration Register
  59   1        SPI0CKR = 0x07; // SPI Clock Rate Register,86.4 KHz(11usec)*/
  60   1        
  61   1        SPI0CN = 0x00;  // SPI Control Register
  62   1        SPI0CFG = 0x07; // SPI Configuration Register
  63   1        //SPI0CKR = 0x07; // SPI Clock Rate Register
  64   1        SPI0CKR = 63; // SPI Clock Rate Register
  65   1        SPI0CN |= 0x01;
  66   1      
  67   1        
  68   1          SCON0 = 0xd0;       // Serial Port Control Register
  69   1          SADEN0 = 0x00;      // Serial 0 Slave Address Enable
  70   1          SADDR0 = 0x00;      // Serial 0 Slave Address Register
  71   1      
  72   1          PCON = 0x00;        // Power Control Register
  73   1      
  74   1          SCON1 = 0xd0;       // Serial Port 1 Control Register   
  75   1          SADEN1 = 0x00;      // Serial 1 Slave Address Enable
  76   1        SADDR1 = 0x00;      // Serial 1 Slave Address Register
  77   1      
  78   1        CKCON = 0x00; // Clock Control Register
  79   1        //TH0 = 0xec;   // Timer 0 High Byte
  80   1        //TL0 = 0x77;   // Timer 0 Low Byte
  81   1        
  82   1        TH0 = 0xFF; // reload the timer0 with 0xf400 for 0.1 msec
  83   1        TL0 = 0x84; //0xF4; 
  84   1      
  85   1      /* ************************ */
  86   1      
  87   1        TH1 = 0xFC;   // Timer 1 High Byte
  88   1        TL1 = 0x00;   // Timer 1 Low Byte
  89   1        TMOD = 0x21;  // Timer Mode Register
  90   1        TCON = 0x50;  // Timer Control Register 
  91   1      
  92   1        RCAP2H = 0x00;  // Timer 2 Capture Register High Byte
  93   1        RCAP2L = 0x00;  // Timer 2 Capture Register Low Byte  
  94   1        TH2 = 0x00;   // Timer 2 High Byte  
  95   1        TL2 = 0x00;   // Timer 2 Low Byte 
  96   1          T2CON = 0x00; // Timer 2 Control Register
  97   1          
  98   1        TMR3RLL = 0x00; // Timer 3 Reload Register Low Byte
  99   1        TMR3RLH = 0x00; // Timer 3 Reload Register High Byte
 100   1        TMR3H = 0x00; // Timer 3 High Byte
 101   1        TMR3L = 0x00; // Timer 3 Low Byte
 102   1          TMR3CN = 0x00;  // Timer 3 Control Register
 103   1      
 104   1        RSTSRC = 0x00;  // Reset Source Register
 105   1      
 106   1        IE = 0x80;          //Interrupt Enable
 107   1        IP = 0x00;          //Interrupt Priority
 108   1        EIE1 = 0x01;        //Extended Interrupt Enable 1
 109   1        EIE2 = 0x00;        //Extended Interrupt Enable 2
 110   1        //EIP1 = 0x01;        //Extended Interrupt Priority 1
 111   1        EIP1 = 0x00;        //Extended Interrupt Priority 1
 112   1        EIP2 = 0x00;        //Extended Interrupt Priority 2   //End of config
 113   1      
 114   1        // IE = 0x8a;          //Interrupt Enable
 115   1        //  IP = 0x00;          //Interrupt Priority
 116   1        //  EIE1 = 0x01;        //Extended Interrupt Enable 1
C51 COMPILER V9.55   INIT_DEVICE                                                           07/26/2016 12:44:43 PAGE 3   

 117   1        //  EIE2 = 0x00;        //Extended Interrupt Enable 2
 118   1        //  EIP1 = 0x01;        //Extended Interrupt Priority 1
 119   1         // EIP2 = 0x00;        //Extended Interrupt Priority 2
 120   1      
 121   1      
 122   1      //ET0=1;
 123   1      //PT0=1;
 124   1      ET0=1;
 125   1      PT0=0;
 126   1      
 127   1      
 128   1      
 129   1        RCAP2H = 0x9f;  // 2.5msec Timer 2 Capture Register High Byte-f3f1
 130   1        RCAP2L = 0xfe;  // Timer 2 Capture Register Low Byte  
 131   1        TH2 = 0x9f;   // Timer 2 High Byte with 2.5msec   
 132   1        TL2 = 0xfe;   // Timer 2 Low Byte 
 133   1          T2CON = 0x04; // Timer 2 Control Register
 134   1          ET2 = 1;       // enable Timer2 interrupt  
 135   1         // ES0 =1;         // enable uarto serial interrupt
 136   1      /*  CKCON  |= 0x40;    // Timer4 uses sys clk as a clk source 
 137   1        RCAP4H    = 0xff;    //9600 baud   0xec
 138   1          RCAP4L    = 0xd0;    // value loaded for 9600 baud rate 
 139   1          TH4       = 0xff;
 140   1          TL4       = 0xd0;
 141   1          T4CON    |= 0x34;    //TR1 = 1; // start timer1
 142   1        SCON1   = 0xd0;    // 9 bit mode,recive enable
 143   1       RCAP2H = 0xed; // 2.5msec Timer 2 Capture Register High Byte-f3f1
 144   1        RCAP2L = 0xff;  // Timer 2 Capture Register Low Byte  
 145   1        TH2 = 0xed;   // Timer 2 High Byte  
 146   1        TL2 = 0xff;   // Timer 2 Low Byte 
 147   1          T2CON = 0x04; // Timer 2 Control Register
 148   1          ET2 =1;    */
 149   1      }
 150          
 151          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    161    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
